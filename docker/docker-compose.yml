version: "1.00"
services:

  backend:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-django
    restart: unless-stopped
    volumes:
      - ..:/app
    ports:
      - 8000:8000
    env_file:
      - path: ../.env
        required: true
    environment:
      POSTGRES_HOST: db1
    deploy:
      replicas: 2
    develop:
      watch:
        - action: sync
          path: .
          target: /app
    links:
      - db1
    depends_on:
      - db1
      - redis
    networks:
      - network_db
      - network_backend
      - network_redis

  redis:
    image: redis:latest
    deploy:
      replicas: 2
    networks:
      - network_redis

  db1:
    command: |
        postgres 
        -c wal_level=replica 
        -c hot_standby=on 
        -c max_wal_senders=10 
        -c max_replication_slots=10 
        -c hot_standby_feedback=on
    image: postgres:16
    restart: always
    user: root
    healthcheck:
      test: 'pg_isready -U ${POSTGRES_USER} --dbname=${POSTGRES_DB}'
      interval: 10s
      timeout: 5s
      retries: 5
    hostname: project1_db
    container_name: project1_db
    shm_size: 128mb
    ports:
      - "5432:5432"
    volumes:
      - ../docker/pgdata1:/var/lib/postgresql/data
    env_file:
      - path: ../.env
        required: true
    networks:
      - network_db
      - default

  nginx:
    build:
      context: ..
      dockerfile: docker/Dockerfile-nginx
    volumes:
      - ../static:/home/app/web/static/
    depends_on:
      - backend
    ports:
      - 80:80
    networks:
      - default
      - network_backend


networks:
  network_redis:
    internal: true
    name: int_redis
  network_db:
    internal: true
    name: int_db
  network_backend:
    internal: true
    name: int_backend